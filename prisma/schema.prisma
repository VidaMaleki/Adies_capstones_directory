// npm i -D prettier-plugin-prisma
// datasource db {
//   provider = "postgresql"
//   url = env("DATABASE_URL")
//   // shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Only needed when using a cloud provider that doesn't support the creation of new databases, like Heroku. Learn more: https://pris.ly/d/migrate-shadow
// }

// generator client {
//   provider        = "prisma-client-js"
//   // previewFeatures = ["referentialActions"] // You won't need this in Prisma 3.X or higher.
// }

// model Account {
//   id                 String  @id @default(cuid())
//   userId             String
//   type               String
//   provider           String
//   providerAccountId  String
//   refresh_token      String?  @db.Text
//   access_token       String?  @db.Text
//   expires_at         Int?
//   token_type         String?
//   scope              String?
//   id_token           String?  @db.Text
//   session_state      String?

//   user Developer @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }

// model Session {
//   id           String   @id @default(cuid())
//   sessionToken String   @unique
//   userId       String
//   expires      DateTime
//   user         Developer     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

// model User {
//   id            String    @id @default(cuid())
//   name          String?
//   email         String?   @unique
//   emailVerified DateTime?
//   image         String?
//   accounts      Account[]
//   sessions      Session[]
// }

// model VerificationToken {
//   identifier String
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
// }

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// after any changes in modele run npx prisma generate
// npx prisma migrate dev --skip-seed

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// https://www.prisma.io/docs/reference/api-reference/prisma-client-reference#connect
// May need to adjust db POST queries to use the syntax in the link above
model Developer {
  id            Int      @id @default(autoincrement())
  fullName      String
  email         String   @unique
  emailVerified Boolean? @default(false)
  image         String?  @default("/auth/user-in-gray-circle.png")
  cohort        String
  linkedin      String?
  password      String
  app           App?     @relation(fields: [appId], references: [id]) // relation fields define connections and don't exist in the db
  appId         Int?
}

model App {
  id           Int         @id @default(autoincrement())
  appName      String
  description  String
  developers   Developer[]
  appLink      String
  videoLink    String
  github       String?
  type         String
  technologies String[]
}
