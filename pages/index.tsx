import Head from "next/head";
import createAppHandler from '@/pages/api/appRoutes';
import { useEffect, useState } from "react";
import Navbar from "@/components/Navbar/Navbar";
import styles from "@/styles/Home.module.css";
import Link from "next/link";
import { db } from "@/lib/db";
import { App } from "@prisma/client";
import AppSection from "@/components/AppSection";
// import { AppWithIdProps } from "@/components/types";
import { AppWithDevelopersProps } from '../components/types';
import axios from 'axios';

// export async function getServerSideProps() {
//   const allApps: App[] = await db.app.findMany();
//   console.log(allApps)
//   return {
//     props: {
//       allApps,
//     },
    
//   };
  
// }

export default function Home() {
  const [webAppsRandom, setWebAppsRandom] = useState<AppWithDevelopersProps[]>([]);
  const [mobileAppsRandom, setMobileAppsRandom] = useState<AppWithDevelopersProps[]>([]);
  const [gamingAppsRandom, setGamingAppsRandom] = useState<AppWithDevelopersProps[]>([]);
  const [socialAppsRandom, setSocialAppsRandom] = useState<AppWithDevelopersProps[]>([]);

  const APP_URL = "/api/appRoutes";

  const getRandomApps = (appsList: any) => {
    if (appsList.length <= 5) return appsList;

    const shuffled = appsList.sort(() => 0.5 - Math.random());
    return shuffled.slice(0, 5);
  };

  useEffect(() => {
    fetchData();
  }, []);

  async function fetchData() {
    try {
      const res = await axios.get(APP_URL);
      const allApps: AppWithDevelopersProps[] = res.data.apps;
      console.log(allApps);
      if (allApps.length > 0) {
        const webApps = allApps.filter((app) => app.type === "Web");
        const mobileApps = allApps.filter((app) => app.type === "Mobile");
        const gamingApps = allApps.filter((app) => app.type === "Game");
        const socialApps = allApps.filter((app) => app.type === "Social");
        console.log(webApps)
        setWebAppsRandom(getRandomApps(webApps));
        setMobileAppsRandom(getRandomApps(mobileApps));
        setGamingAppsRandom(getRandomApps(gamingApps));
        setSocialAppsRandom(getRandomApps(socialApps));

      
    }
    } catch (error) {
      console.error(error);
      // Handle error state if needed
    }
  }

  return (
    <>
      <Head>
        <title>Adies Capstones Hub</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link
          rel="shortcut icon"
          href="/favicon.ico"
          type="images/AdieLogo-browser.png"
        ></link>
        <link
          rel="icon"
          href="/favicon.ico"
          type="images/AdieLogo-browser.png"
        />
        {/* Head content */}
      </Head>
      <main className={styles.main}>
        <Navbar />
        <section className={styles.appsWrapper}>
          <AppSection
            sectionTitle="Web apps"
            apps={webAppsRandom}
            seeAllLink="/web-apps"
          />
          <AppSection
            sectionTitle="Mobile apps"
            apps={mobileAppsRandom}
            seeAllLink="/mobile-apps"
          />
          <AppSection
            sectionTitle="Gaming apps"
            apps={gamingAppsRandom}
            seeAllLink="/game-apps"
          />
          <AppSection
            sectionTitle="Social Media apps"
            apps={socialAppsRandom}
            seeAllLink="/social-apps"
          />
        </section>
      </main>
    </>
  );
}
