import Head from 'next/head'
import { useEffect, useState } from 'react'
import Navbar from '@/components/Navbar'
import styles from '@/styles/Home.module.css'
import Link from "next/link";
import AppCard from '@/components/appCard';
import { db } from '@/lib/db';
import { App } from '@prisma/client';
import { all } from 'axios';
// import AppDetailsPopup from '@/components/appDetailsPopup';

// import { db, connect } from './db';

// async function main() {
//   await connect();
//   const users = await db.user.findMany();
//   console.log(users);
// }

// main().catch((err) => console.error(err));




export async function getServerSideProps() {
    const allApps: App[] = await db.app.findMany();
    return {
        props: {
            allApps: allApps,
        },
    }
}

export default function Home({ allApps } : {
  allApps: App[]
}) {
  const webApps: App[] = [];
  const mobileApps: App[] = [];
  const gamingApps: App[] = [];
  const socialApps: App[] = [];

  allApps.forEach(app => {
    if (app.type === "web") {
      webApps.push(app);
    } else if (app.type === "mobile") {
      mobileApps.push(app);
    } else if (app.type === "game") {
      gamingApps.push(app);
    } else if (app.type === "social") {
      socialApps.push(app);
    }
  });

  const [webAppsRandom, setWebAppsRandom] = useState<App[]>([]);
  const [mobileAppsRandom, setMobileAppsRandom] = useState<App[]>([]);
  const [gamingAppsRandom, setGamingAppsRandom] = useState<App[]>([]);
  const [socialAppsRandom, setSocialAppsRandom] = useState<App[]>([]);

  const getRandomApps = (appsList: any) => {
    if (appsList.length <= 5) return appsList;

    const shuffled = appsList.sort(() => 0.5 - Math.random());
    return shuffled.slice(0, 5);
  }

  // Populate 5 random apps with useEffect and useState gets rid of hydration error
  useEffect(() => {
    setWebAppsRandom(getRandomApps(webApps));
    setGamingAppsRandom(getRandomApps(gamingApps));
    setSocialAppsRandom(getRandomApps(socialApps));
    setMobileAppsRandom(getRandomApps(mobileApps));
  }, []);

  return (
    <>
      <Head>
        <title>Adies Capstones Hub</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="shortcut icon" href="/favicon.ico" type="images/AdieLogo-browser.png"></link>
        <link rel="icon" href="/favicon.ico" type="images/AdieLogo-browser.png"/>
      </Head>
      <main className={styles.main}>
        <Navbar/>
        <section className={styles.appsWrapper}>
          <div>
            <div className={styles.appsHeader}>
              <h2>Web apps</h2>
              <button className={styles.seeMoreButton}>
                <Link href="/web-apps" className={styles.seeMoreText}>See more</Link>
              </button>
            </div>
            <div className={styles.appsCardGrid}>
              {webAppsRandom.map((app)=> (
                <AppCard
                  key={app.id}
                  app={app}
                />
              ))}
            </div>
          </div>
          <div>
            <div className={styles.appsHeader}>
              <h2>Mobile apps</h2>
              <button className={styles.seeMoreButton}>
                <Link href="/mobile-apps" className={styles.seeMoreText}>See more</Link>
              </button>
            </div>
            <div className={styles.appsCardGrid}>
              {mobileAppsRandom.map((app)=> (
                <AppCard
                  key={app.id}
                  app={app}
                  />
                ))}
              </div>
            </div>
          <div>
          <div className={styles.appsHeader}>
              <h2>Gaming apps</h2>
              <button className={styles.seeMoreButton}>
                <Link href="/game-apps" className={styles.seeMoreText}>See more</Link>
              </button>
            </div>
            <div className={styles.appsCardGrid}>
            {gamingAppsRandom.map((app)=> (
              <AppCard
              key={app.id}
              app={app}
              />
            ))}
            </div>
          </div>
          <div>
          <div className={styles.appsHeader}>
              <h2>Social Media apps</h2>
              <button className={styles.seeMoreButton}>
                <Link href="/social-apps" className={styles.seeMoreText}>See more</Link>
              </button>
            </div>
            <div className={styles.appsCardGrid}>
            {socialAppsRandom.map((app)=> (
              <AppCard
              key={app.id}
              app={app}
              />
            ))}
            </div>
          </div>
        </section>
      </main>
    </>
  )
}
